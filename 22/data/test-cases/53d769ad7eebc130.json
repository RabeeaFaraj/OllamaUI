{"uid":"53d769ad7eebc130","name":"test_send_message","fullName":"tests.test_example.ExampleTestCase#test_send_message","historyId":"c2965b0c9c00dca871bbb0fc9e66f946","time":{"start":1757580762876,"stop":1757580765873,"duration":2997},"status":"failed","statusMessage":"AssertionError: False is not true","statusTrace":"self = <test_example.ExampleTestCase testMethod=test_send_message>\n\n    def test_send_message(self):\n        self.home.open(OLLAMA_URL)\n        # self.home.select_gemma3()\n        self.home.send_message(\"Hello! Can you help me with Python?\")\n        #time.sleep(1)\n        self.assertEqual(self.home.get_sent_message(), \"Hello! Can you help me with Python?\")\n>       self.assertTrue(self.home.is_response_displayed())\nE       AssertionError: False is not true\n\ntests/test_example.py:34: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_ExampleTestCase","time":{"start":1757580758740,"stop":1757580758740,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: False is not true","statusTrace":"self = <test_example.ExampleTestCase testMethod=test_send_message>\n\n    def test_send_message(self):\n        self.home.open(OLLAMA_URL)\n        # self.home.select_gemma3()\n        self.home.send_message(\"Hello! Can you help me with Python?\")\n        #time.sleep(1)\n        self.assertEqual(self.home.get_sent_message(), \"Hello! Can you help me with Python?\")\n>       self.assertTrue(self.home.is_response_displayed())\nE       AssertionError: False is not true\n\ntests/test_example.py:34: AssertionError","steps":[{"name":"Test metadata","time":{"start":1757580762876,"stop":1757580762876,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"_unittest_setUpClass_fixture_ExampleTestCase::0","time":{"start":1757580765901,"stop":1757580765901,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"browser","value":"firefox"},{"name":"resolution","value":"firefox-laptop"},{"name":"screen","value":"1366x768"},{"name":"environment","value":"staging"},{"name":"yolo_version","value":"yolo"},{"name":"yolo_img_tag","value":"bd56731ea7305d14a91b373843ba6948f526a424-20250907-103355"},{"name":"ollama_version","value":"ollama"},{"name":"ollama_ui_img_tag","value":"4bd814f9e6b44783a4411de9b7f0cabc2fc0430a-20250911-084906"},{"name":"postgres_version","value":"postgres:14"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_example"},{"name":"subSuite","value":"ExampleTestCase"},{"name":"host","value":"runnervmf4ws1"},{"name":"thread","value":"2638-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_example"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'firefox'"},{"name":"environment","value":"'staging'"},{"name":"resolution","value":"'firefox-laptop'"},{"name":"screen","value":"'1366x768'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"53d769ad7eebc130.json","parameterValues":["'firefox'","'staging'","'firefox-laptop'","'1366x768'"]}